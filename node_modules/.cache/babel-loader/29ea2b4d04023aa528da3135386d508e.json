{"ast":null,"code":"var _jsxFileName = \"/Users/polzovatel/STUFF/FE/Changer/changer/src/App.js\";\nimport React, { Component } from 'react';\nimport Card from './Card/Card';\nimport './App.css';\nimport Header from './Header/Header';\nimport Calc from './Calc/Calc';\nimport Card2 from './Card2/Card2';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.changeActiveVal1 = newVal => {\n      this.setState({\n        ActiveVal1: newVal\n      });\n    };\n\n    this.changeActiveVal2 = newVal => {\n      this.setState({\n        ActiveVal2: newVal\n      });\n    };\n\n    this.changeCost = event => {\n      let c = this.state.Val.filter(i => i.CharCode === this.state.ActiveVal1);\n      let d = this.state.Val2.filter(i => i.CharCode === this.state.ActiveVal2);\n      let sum = event.target.value;\n      let newCost = (event.target.value * c[0].Value / d[0].Value).toFixed(3);\n      this.setState({\n        Cost2: newCost,\n        Sum: sum\n      });\n    };\n\n    this.changeWallet = event => {\n      let wal = event.target.value;\n      this.setState({\n        ActiveWall: wal\n      });\n    };\n\n    this.Close = () => {\n      const arr = this.state.Col3;\n      arr.push('Closed');\n      const arr1 = this.state.Col1;\n      arr1.push('Closed');\n      const arr3 = this.state.Col2;\n      arr3.push('Closed');\n      const arr2 = this.state.Col4;\n      arr2.pop();\n      this.setState({\n        Col3: arr,\n        Col4: arr2,\n        Col1: arr1,\n        Col2: arr3\n      });\n    };\n\n    this.state = {\n      Val: [0],\n      ActiveVal1: 'BTC',\n      ActiveVal2: 'USD',\n      Cost2: 0,\n      Sum: 0,\n      Col1: ['Col1'],\n      Col2: ['Col2'],\n      Col3: ['Col3'],\n      Col4: ['Col4', 'Closed']\n    };\n  }\n\n  componentDidMount() {\n    fetch('https://www.cbr-xml-daily.ru/daily_json.js').then(data => {\n      return data.json();\n    }).then(data => {\n      let arr = Object.values(data.Valute);\n      this.setState({\n        Val: arr\n      }); // const newArr = [...this.state.Val2, ...arr]\n      // this.setState({Val2: newArr})\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        textAlign: 'center'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"AllVals\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: this.state.Col1.join(' '),\n          children: [\"Sell\", this.state.Val.map((card, index) => {\n            return /*#__PURE__*/_jsxDEV(Card, {\n              name: card.Name,\n              symbol: card.CharCode,\n              onClick1: this.changeActiveVal1.bind(this, card.CharCode)\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 29\n            }, this);\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: this.state.Col3.join(' '),\n          children: /*#__PURE__*/_jsxDEV(Calc, {\n            val1: this.state.ActiveVal1,\n            val2: this.state.ActiveVal2,\n            onChange: this.changeCost,\n            cost2: this.state.Cost2,\n            Close: this.Close,\n            onChangeWallet: this.changeWallet\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: this.state.Col2.join(' '),\n          children: [\"Buy\", this.state.Val.map((card, index) => {\n            return /*#__PURE__*/_jsxDEV(Card2, {\n              name: card.Name,\n              symbol: card.CharCode,\n              onClick1: this.changeActiveVal2.bind(this, card.CharCode)\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 29\n            }, this);\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/polzovatel/STUFF/FE/Changer/changer/src/App.js"],"names":["React","Component","Card","Header","Calc","Card2","App","constructor","props","changeActiveVal1","newVal","setState","ActiveVal1","changeActiveVal2","ActiveVal2","changeCost","event","c","state","Val","filter","i","CharCode","d","Val2","sum","target","value","newCost","Value","toFixed","Cost2","Sum","changeWallet","wal","ActiveWall","Close","arr","Col3","push","arr1","Col1","arr3","Col2","arr2","Col4","pop","componentDidMount","fetch","then","data","json","Object","values","Valute","render","textAlign","join","map","card","index","Name","bind"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Card from './Card/Card'\nimport './App.css'\nimport Header from './Header/Header'\nimport Calc from './Calc/Calc'\nimport Card2 from './Card2/Card2'\n\n\n\nclass App extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n        Val: [0],\n        ActiveVal1 : 'BTC',\n        ActiveVal2 : 'USD',\n        Cost2 : 0,\n        Sum: 0,\n        Col1: ['Col1'],\n        Col2: ['Col2'],\n        Col3: ['Col3'],\n        Col4: ['Col4', 'Closed'],\n        };\n    }\n\n    componentDidMount() {\n        fetch( 'https://www.cbr-xml-daily.ru/daily_json.js')\n        .then( data => {\n            return data.json();\n        })\n        .then(data => {\n            let arr = Object.values(data.Valute)\n            this.setState({Val: arr})\n            // const newArr = [...this.state.Val2, ...arr]\n            // this.setState({Val2: newArr})\n        })\n    }\n    \n    changeActiveVal1 = (newVal) => {\n        this.setState({\n            ActiveVal1: newVal\n        })\n    }\n\n    changeActiveVal2 = (newVal) => {\n        this.setState({\n            ActiveVal2: newVal\n        })\n    }\n\n    changeCost = (event) => {\n\n        let c = this.state.Val.filter ((i)=> i.CharCode === this.state.ActiveVal1);\n        let d = this.state.Val2.filter ((i)=> i.CharCode === this.state.ActiveVal2);\n        let sum = event.target.value\n        let newCost = (event.target.value * c[0].Value / d[0].Value ).toFixed(3) \n         this.setState ({\n             Cost2: newCost,\n             Sum : sum,\n         })       \n    }\n\n    changeWallet = (event) => {\n        let wal = event.target.value \n        this.setState ({ActiveWall: wal})\n    }\n\n    Close = () => {\n        const arr = this.state.Col3\n        arr.push('Closed')\n        const arr1 = this.state.Col1\n        arr1.push('Closed')\n        const arr3 = this.state.Col2\n        arr3.push('Closed')\n        const arr2 = this.state.Col4\n        arr2.pop()\n        this.setState({\n            Col3: arr,\n            Col4: arr2,\n            Col1: arr1,\n            Col2: arr3,\n        })\n    }\n   \n\n    render() {\n\n  \n    return ( \n        <div style ={{textAlign: 'center'}}>\n            <Header />\n            <div className='AllVals'>\n                <div className={this.state.Col1.join(' ')}>\n                    Sell\n                    \n                    { this.state.Val.map((card, index) => {\n                        return ( \n                            <Card\n                            key = {index} \n                            name = {card.Name} \n                            symbol = {card.CharCode}\n                            onClick1 = {this.changeActiveVal1.bind(this, card.CharCode)}\n                            />\n                        )\n                    }) \n                    }\n                </div>\n\n                <div className={this.state.Col3.join(' ')}>\n                    <Calc val1={this.state.ActiveVal1} val2={this.state.ActiveVal2} onChange = {this.changeCost} cost2 = {this.state.Cost2} Close = {this.Close} onChangeWallet = {this.changeWallet} />\n                </div>\n                \n                <div className={this.state.Col2.join(' ')}>\n                    Buy\n                    \n                    { this.state.Val.map((card, index) => {\n                        return ( \n                            <Card2\n                            key = {index} \n                            name = {card.Name} \n                            symbol = {card.CharCode}\n                            onClick1 = {this.changeActiveVal2.bind(this, card.CharCode)}\n                            />\n                        )\n                    }) \n                    }\n                \n                    </div>\n\n            </div>\n        </div>\n    )\n    \n    }\n}\nexport default App;"]},"metadata":{},"sourceType":"module"}
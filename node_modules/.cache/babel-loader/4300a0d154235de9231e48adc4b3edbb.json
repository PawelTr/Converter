{"ast":null,"code":"var _jsxFileName = \"/Users/polzovatel/STUFF/FE/Portfolio/Converter/changer/src/Line/Line.js\";\nimport React, { Component } from 'react';\nimport './Line.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Line extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      Val: [0]\n    };\n  }\n\n  componentDidMount() {\n    fetch('https://www.cbr-xml-daily.ru/daily_json.js').then(data => {\n      return data.json();\n    }).then(data => {\n      let arr = Object.values(data.Valute);\n      this.setState({\n        Val: arr\n      });\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Col0\",\n        children: this.state.Val.map((card, index) => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"Card__line\",\n            children: [card.CharCode, \" \", (card.Previous - card.Value).toFixed(2)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 29\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Col0\",\n        children: this.state.Val.map((card, index) => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"Card__line\",\n            children: [card.CharCode, \" \", (card.Previous - card.Value).toFixed(2)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 25\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Line;","map":{"version":3,"sources":["/Users/polzovatel/STUFF/FE/Portfolio/Converter/changer/src/Line/Line.js"],"names":["React","Component","Line","constructor","props","state","Val","componentDidMount","fetch","then","data","json","arr","Object","values","Valute","setState","render","map","card","index","CharCode","Previous","Value","toFixed"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,YAAP;;;AAEA,MAAMC,IAAN,SAAmBD,SAAnB,CAA6B;AACzBE,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACbC,MAAAA,GAAG,EAAE,CAAC,CAAD;AADQ,KAAb;AAGH;;AAEDC,EAAAA,iBAAiB,GAAG;AAChBC,IAAAA,KAAK,CAAE,4CAAF,CAAL,CACCC,IADD,CACOC,IAAI,IAAI;AACX,aAAOA,IAAI,CAACC,IAAL,EAAP;AACH,KAHD,EAICF,IAJD,CAIMC,IAAI,IAAI;AACV,UAAIE,GAAG,GAAGC,MAAM,CAACC,MAAP,CAAcJ,IAAI,CAACK,MAAnB,CAAV;AACA,WAAKC,QAAL,CAAc;AAACV,QAAAA,GAAG,EAAEM;AAAN,OAAd;AACH,KAPD;AAQH;;AAEDK,EAAAA,MAAM,GAAG;AACL,wBACI;AAAA,8BACA;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA,kBACU,KAAKZ,KAAL,CAAWC,GAAX,CAAeY,GAAf,CAAmB,CAACC,IAAD,EAAOC,KAAP,KAAiB;AAClC,8BACI;AAAK,YAAA,SAAS,EAAC,YAAf;AAAA,uBACCD,IAAI,CAACE,QADN,OACiB,CAACF,IAAI,CAACG,QAAL,GAAgBH,IAAI,CAACI,KAAtB,EAA6BC,OAA7B,CAAqC,CAArC,CADjB;AAAA,aAAiCJ,KAAjC;AAAA;AAAA;AAAA;AAAA,kBADJ;AAIH,SALC;AADV;AAAA;AAAA;AAAA;AAAA,cADA,eAUI;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA,kBACE,KAAKf,KAAL,CAAWC,GAAX,CAAeY,GAAf,CAAmB,CAACC,IAAD,EAAOC,KAAP,KAAiB;AAClC,8BACI;AAAK,YAAA,SAAS,EAAC,YAAf;AAAA,uBACCD,IAAI,CAACE,QADN,OACiB,CAACF,IAAI,CAACG,QAAL,GAAgBH,IAAI,CAACI,KAAtB,EAA6BC,OAA7B,CAAqC,CAArC,CADjB;AAAA,aAAiCJ,KAAjC;AAAA;AAAA;AAAA;AAAA,kBADJ;AAIH,SALC;AADF;AAAA;AAAA;AAAA;AAAA,cAVJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAsBH;;AA1CwB;;AA6C7B,eAAelB,IAAf","sourcesContent":["import React, { Component } from 'react';\nimport './Line.css'\n\nclass Line extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n        Val: [0],\n        };\n    }\n\n    componentDidMount() {\n        fetch( 'https://www.cbr-xml-daily.ru/daily_json.js')\n        .then( data => {\n            return data.json();\n        })\n        .then(data => {\n            let arr = Object.values(data.Valute)\n            this.setState({Val: arr})\n        })\n    }\n\n    render() {\n        return (\n            <div>\n            <div className='Col0'>    \n                    { this.state.Val.map((card, index) => {\n                        return ( \n                            <div className='Card__line' key={index} >\n                            {card.CharCode} {(card.Previous - card.Value).toFixed(2)}\n                            </div>)\n                    }) \n                    }\n                </div>\n                <div className='Col0'>    \n                { this.state.Val.map((card, index) => {\n                    return ( \n                        <div className='Card__line' key={index} >\n                        {card.CharCode} {(card.Previous - card.Value).toFixed(2)}\n                        </div>)\n                }) \n                }\n            </div>\n            </div>\n        )\n    }\n}\n\nexport default Line"]},"metadata":{},"sourceType":"module"}